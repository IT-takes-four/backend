---
services:
  api:
    image: oven/bun:latest
    container_name: quokka-api-dev
    ports:
      - "3030:3030"
    environment:
      - NODE_ENV=development
      - PORT=3030
      - SQLITE_DATABASE_URL=./games.db
      - REDIS_URL=redis://redis:6379
      - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
      - TWITCH_CLIENT_SECRET=${TWITCH_CLIENT_SECRET}
      - LOG_LEVEL=${LOG_LEVEL}
      - SENTRY_DSN=${SENTRY_DSN}
      - POSTGRES_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
    volumes:
      - ./:/app
      - ./games.db:/app/games.db
      - node_modules:/app/node_modules
    working_dir: /app
    command: sh -c "bun install && bun run dev"
    restart: unless-stopped
    networks:
      - quokka-network

  postgres:
    image: postgres:17.4-alpine
    container_name: quokka-postgres-dev
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - quokka-network

  redis:
    image: redis:7.4.2-alpine
    container_name: quokka-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - quokka-network

volumes:
  postgres-data:
    name: quokka-postgres-data-dev
  redis-data:
    name: quokka-redis-data-dev
  node_modules:
    name: quokka-node-modules-dev

networks:
  quokka-network:
    driver: bridge
