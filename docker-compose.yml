---
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: playdamnit-api
    ports:
      - "3030:3030"
    environment:
      - NODE_ENV=production
      - PORT=3030

      - POSTGRES_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - SQLITE_DATABASE_URL=./data/games.db
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET:-}
      - REDIS_URL=redis://redis:6379

      - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
      - TWITCH_CLIENT_SECRET=${TWITCH_CLIENT_SECRET}

      - RESEND_API_KEY=${RESEND_API_KEY}

      - OPENAI_API_KEY=${OPENAI_API_KEY:-}

      - LOG_LEVEL=${LOG_LEVEL:-error}
      - SENTRY_DSN=${SENTRY_DSN:-}
      - TRUSTED_ORIGINS=${TRUSTED_ORIGINS:-}

      - RUN_MIGRATIONS=${RUN_MIGRATIONS:-true}
      - RUN_SEED=${RUN_SEED:-false}

    volumes:
      - sqlite-data:/app/data
    restart: unless-stopped
    networks:
      - playdamnit-network
  postgres:
    image: postgres:17.4-alpine
    container_name: playdamnit-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: playdamnit
      POSTGRES_PASSWORD: playdamnit_password
      POSTGRES_DB: playdamnit
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U playdamnit"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - playdamnit-network

  redis:
    image: redis:7.4.2-alpine
    container_name: playdamnit-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - playdamnit-network

volumes:
  sqlite-data:
    name: playdamnit-sqlite-data
  postgres-data:
    name: playdamnit-postgres-data
  redis-data:
    name: playdamnit-redis-data

networks:
  playdamnit-network:
    driver: bridge
