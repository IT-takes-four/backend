---
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: quokka-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
      - TWITCH_CLIENT_SECRET=${TWITCH_CLIENT_SECRET}

      - SQLITE_DATABASE_URL=./data/games.db
      - RUN_MIGRATIONS=${RUN_MIGRATIONS:-true}
      - RUN_SEED=${RUN_SEED:-false}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}

      - LOG_LEVEL=${LOG_LEVEL:-error}
      - SENTRY_DSN=${SENTRY_DSN:-}
    volumes:
      - sqlite-data:/app/data
    restart: unless-stopped
    networks:
      - quokka-network
  postgres:
    image: postgres:17.4-alpine
    container_name: quokka-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: quokka
      POSTGRES_PASSWORD: quokka_password
      POSTGRES_DB: quokka
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quokka"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - quokka-network

  redis:
    image: redis:7.4.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - quokka-network

volumes:
  sqlite-data:
    name: quokka-sqlite-data
  postgres-data:
    name: quokka-postgres-data
  redis-data:
    name: quokka-redis-data
 
networks:
  quokka-network:
    driver: bridge
